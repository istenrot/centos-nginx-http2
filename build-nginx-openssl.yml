---
- hosts: all
  remote_user: vagrant
  vars_files:
  - variables.yml
  vars:
    nginx_src_rpm: "nginx-{{ nginx_ver }}.el6.ngx.src.rpm"
  tasks:
  - name: Install EPEL Yum repo
    yum: name=epel-release state=present
    become: yes
    become_user: root
  - name: Install build tools from CentOS repos
    yum: name={{ item }} state=present
    become: yes
    become_user: root
    with_items:
    - ca-certificates
    - curl
    - libcurl
    - git
    - glib2
    - rsync
    - make
    - patch
    - bzip2
    - xz
    - tar
    - autoconf
    - automake
    - libtool
    - zlib-devel
    - glibc-devel
    - libaio-devel
    - pcre-devel
    - nss-devel
    - nss-softokn-devel
    - nss-softokn-freebl-devel
    - nspr-devel
    - libgcrypt-devel
    - libgpg-error-devel
    - libatomic_ops-devel
    - libxslt-devel
    - gd-devel
    - GeoIP-devel
    - rpm-build
    - redhat-rpm-config
    - mock
    - scl-utils
    - centos-release-scl-rh
  - name: Install build tools from Devtoolset-6 repo
    yum: name={{ item }} state=present
    become: yes
    become_user: root
    with_items:
    - devtoolset-6-make
    - devtoolset-6-binutils
    - devtoolset-6-gcc
    - devtoolset-6-gcc-c++
  - name: Create directory for signing keys
    file: dest=keys state=directory
  - name: Copy OpenSSL signing keys
    copy: src=openssl_signers.asc dest=keys/openssl_signers.asc
  - name: Copy Nginx signing key
    copy: src=nginx_signing.key dest=keys/nginx_signing.key
  - name: Import OpenSSL signing keys
    command: gpg --import keys/openssl_signers.asc
  - name: Import Nginx signign key
    command: rpm --import keys/nginx_signing.key
    become: yes
  - name: Delete recursively old rpmbuild directory
    file: dest=rpmbuild state=absent
  - name: Create new rpmbuild directory
    file: dest=rpmbuild/BUILD state=directory recurse=yes
  - name: Download Nginx RPM source package
    get_url:
      url: http://nginx.org/packages/mainline/centos/6/SRPMS/{{ nginx_src_rpm }}
      dest: ~/rpmbuild/nginx-src.rpm
  - name: Verify Nginx RPM source package signature
    command: rpmkeys -v -K ~/rpmbuild/nginx-src.rpm
  - name: Extract Nginx RPM source package
    shell: rpm -i ~/rpmbuild/nginx-src.rpm
  - name: Create pcre directory
    file: dest=rpmbuild/BUILD/pcre state=directory
  - name: Download latest PCRE
    shell: curl -s -S -L "https://ftp.pcre.org/pub/pcre/pcre-{{ pcre_version }}.tar.bz2" | tar -C rpmbuild/BUILD/pcre --strip-components=1 -xj
  - name: Create openssl directory
    file: dest=rpmbuild/BUILD/openssl state=directory
  - name: Download OpenSSL
    get_url:
      url: http://www.openssl.org/source/{{ openssl_src }}.tar.gz
      dest: ~/rpmbuild/openssl.tar.gz
  - name: Download OpenSSL source package signature file
    get_url:
      url: http://www.openssl.org/source/{{ openssl_src }}.tar.gz.asc
      dest: ~/rpmbuild/openssl.tar.gz.asc
  - name: Verify OpenSSL source signature
    command: gpgv --keyring pubring.gpg -v ~/rpmbuild/openssl.tar.gz.asc ~/rpmbuild/openssl.tar.gz
  - name: Extract OpenSSL sources
    command: tar -C rpmbuild/BUILD/openssl --strip-components=1 -xzf ~/rpmbuild/openssl.tar.gz
  - name: Run OpenSSL configure script
    shell: source /opt/rh/devtoolset-6/enable && ./config
    args:
      chdir: ~/rpmbuild/BUILD/openssl
  - name: 'Modify RPM spec: remove openssl package dependencies'
    replace:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(Build)?Requires: (lib)?openssl[^\n]*\n'
  - name: 'Modify RPM spec: remove pcre package dependencies'
    replace:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(Build)?Requires: (lib)?pcre[^\n]*\n'
  - name: 'Modify RPM spec: build with static PCRE library'
    lineinfile:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(%define BASE_CONFIGURE_ARGS.*)"\)$'
      line: '\1 --with-pcre=../pcre")'
      backrefs: yes
  - name: 'Modify RPM spec: enable PCRE JIT'
    lineinfile:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(%define BASE_CONFIGURE_ARGS.*)"\)$'
      line: '\1 --with-pcre-jit")'
      backrefs: yes
  - name: 'Modify RPM spec: build PCRE with PIC option'
    lineinfile:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(%define BASE_CONFIGURE_ARGS.*)"\)$'
      line: '\1 --with-pcre-opt=\"-fPIC\"")'
      backrefs: yes
  - name: 'Modify RPM spec: build with static OpenSSL library'
    lineinfile:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(%define BASE_CONFIGURE_ARGS.*)"\)$'
      line: '\1 --with-openssl=../openssl")'
      backrefs: yes
  - name: 'Modify RPM spec: build OpenSSL with custom options'
    replace:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(./configure %{BASE_CONFIGURE_ARGS} \\\n)( *--with-cc-opt="%{WITH_CC_OPT}" \\\n)'
      replace: '\1    --with-openssl-opt="no-dtls" \\\n\2'
  - name: 'Modify RPM spec: build with dynamic libatomic_ops'
    lineinfile:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(%define BASE_CONFIGURE_ARGS.*)"\)$'
      line: '\1 --with-libatomic")'
      backrefs: yes
  - name: 'Modify RPM spec: add build identifier'
    replace:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(./configure %{BASE_CONFIGURE_ARGS} \\\n)( *--with-openssl-opt=[^\n]* \\\n)'
      replace: '\1    --build="github.com/istenrot/centos-nginx-http2: SSE2, {{ openssl_src }}, PCRE JIT, TCP Fast Open" \\\n\2'
  - name: 'Modify RPM spec: CC options'
    lineinfile:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^(%define WITH_CC_OPT.*)$'
      line: '\1 -mmmx -msse -msse2 -DTCP_FASTOPEN=23'
      backrefs: yes
  - name: 'Modify RPM spec: update release'
    lineinfile:
      dest: ~/rpmbuild/SPECS/nginx.spec
      regexp: '^%define main_release .*\.ngx$'
      line: '%define main_release 2%{?dist}.exove'
  - name: Build RPM packages
    shell: source /opt/rh/devtoolset-6/enable && rpmbuild -ba rpmbuild/SPECS/nginx.spec

